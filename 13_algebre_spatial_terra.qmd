---
cache: false
---

# Algèbre spatiale

L'algèbre spatiale se classifie en quatre groupes d'opération [@Tomlin_1990] :   

- ***Local*** : opération par cellule, sur une ou plusieurs couches;   
- ***Focal*** : opération de voisinage (cellules environnantes);   
- ***Zonal*** : pour résumer les valeurs matricielles pour certaines zones, généralement irrégulières;   
- ***Global*** : pour résumer les valeurs matricielles d'une ou plusieurs matrices.  

![@XingongLi2009](img/lo_fo_zo_glo.png)

## Opérations locales

![@JMennis2015](img/op_local_2.png)

Les opérations locales concernent les calculs réalisés indépendamment sur une cellule, à partir d'une ou plusieurs couches (matrices).

### Remplacement de valeur

```{r}
#| include: false
library(terra)
elev <- rast("data/elev.tif") 
clc <- rast("data/clc.tif")
```


```{r op_local_0}
#| eval: false
# Remplace les valeurs -9999 par NA
elev[elev[[1]]== -9999] <- NA

# Remplace les valeurs < 1500 par NA
elev[elev < 1500]  <- NA

# Remplace les valeurs NA par 0
elev[is.na(elev )] <- 0
```


### Opération sur chaque cellule
```{r op_local_1, eval=TRUE}
# Ajout de 1000 à la valeur de chaque cellule
elev_1000 <-  elev + 1000

# Suppression de l'altitude médiane à la valeur de chaque cellule
elev_med <-  elev - global(x = elev, fun = median, na.rm = TRUE)[[1]]
```

```{r op_local_2, eval=TRUE, echo=FALSE,  fig.align='center', fig.width=8}
#| layout-ncol: 2
plot(elev_1000, main = "Elevation + 1000")
plot(elev_med, main = "Elevation - median value")
```


<!-- ```{r} -->
<!-- #| cache: false -->
<!-- knitr::knit_exit() -->
<!-- ``` -->

### Reclassification

La reclassification des valeurs d'un raster peut aussi bien être utilisée pour discrétiser des données quantitatives que pour catégoriser des modalités qualitatives.

Cela permet par exemple de répartir les [44 postes de la nomenclature CLC](https://www.statistiques.developpement-durable.gouv.fr/corine-land-cover-0) selon les 5 grands types d'occupation du territoire : territoires artificialisés, agricoles, forêts et milieux semi-naturels, zones humides et surfaces en eau. Pour cela, il est d'abord nécessaire de construire une table de correspondance avec la fonction `matrix()`.

```{r reclass_2}
reclassif <- matrix(c(100, 199, 1,
                      200, 299, 2,
                      300, 399, 3,
                      400, 499, 4,
                      500, 599, 5),
                    ncol = 3, 
                    byrow = TRUE)
reclassif
```
Les valeurs comprises entre 100 et 199 seront remplacées par la valeur 1.
Les valeurs comprises entre 200 et 299 seront remplacées par la valeur 2.
Les valeurs comprises entre 300 et 399 seront remplacées par la valeur 3.
...


La fonction `classify()` permet de réaliser la reclassification.
```{r reclass_4}
clc_5 <- classify(clc, rcl = reclassif)

plot(clc_5, type = "classes")
```

Affichage avec les intitulés et couleurs officiels des différentes catégories.
```{r reclass_6}
#| fig-width: 6
#| fig.height: 4.5
plot(clc_5,
     type = "classes",
     levels = c("Territoires artificialisés",
                "Territoires agricoles",
                "Forêts et milieux semi-naturels",
                "Surfaces en eau"),
     col = c("#E6004D", "#FFFFA8", "#80FF00", "#00CCF2"), 
     plg = list(cex = 0.7))
```



### Opération sur plusieurs couches (ex: NDVI)

Il est possible de calculer une valeur de cellule à partir de différentes valeurs stockées dans plusieurs couches d'un objet `SpatRaster`.

L'exemple le plus courant est sans doute le calcul de l'[indice de végétation normalisé (*NDVI*)](http://www.trameverteetbleue.fr/outils-methodes/donnees-mobilisables/indice-vegetation-modis). Pour chaque cellule, on calcule une valeur à partir de deux couches de données matricielles d'une image satellite multispectrale.

```{r NDVI, eval=TRUE}
# Import d'une image satellite multispectrale
Sentinel2a <- rast("data/Sentinel2A.tif")

Sentinel2a
```
Cette image satellite multispectrale (résolution de 10m) datée du 12/10/2021, a été produite par le satellite *Sentinel-2* et a été récupérée sur la [plateforme Copernicus Open Access Hub](https://scihub.copernicus.eu/dhus/#/home). Une extraction des bandes spectrales Rouge et proche infrarouge, centrée sur le département du Lot a ensuite été réalisée.

```{r NDVI_1}
#| fig-width: 7 
#| fig.height: 3
plot(Sentinel2a)
```


Pour alléger le code, on assigne les couches matricielles dans deux objets `SpatRaster` différents.
```{r NDVI_2}
# Bande spectrale rouge
B04_Red <- Sentinel2a[[1]]

# Bande spectrale proche infrarouge
B08_NIR <-Sentinel2a[[2]]
```

À partir de ces deux rasters, nous pouvons calculer l'indice de végétation normalisé :

$${NDVI}=\frac{\mathrm{NIR} - \mathrm{Red}} {\mathrm{NIR} + \mathrm{Red}}$$

```{r NDVI_3}
raster_NDVI <- (B08_NIR - B04_Red ) / (B08_NIR + B04_Red )
plot(raster_NDVI)
```
Plus les valeurs sont importantes (proche de 1), plus la végétation est dense.

## Opérations focales
![@JMennis2015](img/op_focal_2.png)


L'analyse focale considère une cellule plus ses voisins directs de manière contiguë et symétrique (opérations de voisinage). Le plus souvent, la valeur de la cellule de sortie est le résultat d'un bloc de cellules d'entrée 3 x 3 (nombre impair).

La première étape consiste à construire une matrice qui détermine le bloc de cellules qui sera pris en compte autour de chaque cellule.

```{r op_focal_1}
# Matrice 9 x 9, où chaque cellule présente la même pondération (1)
mon_focal <- matrix(1, nrow = 9, ncol = 9)
mon_focal
```

La fonction `focal()` permet ensuite de réaliser l'analyse souhaitée. Par exemple : le calcul de la moyenne des valeurs dans une fenêtre spatiale determinée, pour chaque cellule du raster.

```{r op_focal_3}
elev_focal_mean <- focal(elev, w = mon_focal, fun = mean)
```

```{r op_focal_5}
#| layout-ncol: 2
plot(elev, main = "raster de départ")
plot(elev_focal_mean, main="résultat : focal 9 x 9, pondération uniforme")
```




### Opération focales pour rasters d'élévation

La fonction `terrain()` permet de réaliser des analyses focales spécifiques au rasters d'élévation. Six opérations sont disponibles :

- ***slope*** = calcul de la pente ou degré d'inclinaison de la surface;
- ***aspect*** = calcul de l'orientation de la pente;
- ***roughness*** = calcul de la variabilité ou l'irrégularité de l'élévation;
- ***TPI*** = calcul de l'indice des positions topographiques;
- ***TRI*** = calcul de l'indice de la variabilité de l'élévation;
- ***flowdir*** = calcul du sens d'écoulement de l'eau.

Exemples avec le calcul des pentes (*slope*), c'est à dire leur inclinaison en degrés.
```{r op_focal_6}

slope <- terrain(elev, "slope",
                 neighbors = 8, # 8 (ou 4) cellules autour pris en compte
                 unit = "degrees") # Unité en sortie

plot(slope)
```



## Opérations globales

![[gisgeography.com](https://gisgeography.com/map-algebra-global-zonal-focal-local/)](img/op_global.png)

Les opérations globales permettent de résumer les valeurs matricielles d'une ou plusieurs matrices.

```{r op_global_1}
# Valeur moyenne
global(elev, fun = "mean", na.rm = TRUE)
# Écart-type
global(elev, fun = "sd", na.rm = TRUE)
# Fréquence
freq(clc_5)
```

Représentations statistiques qui résument les informations matricielles.
```{r op_global_4, eval=TRUE,  fig.align='center', fig.width=6}
# Histogramme
hist(elev)
# Densité
density(elev)
# boxplot
boxplot(elev)
```


## Opérations zonales

![@JMennis2015](img/op_zonal_2.png)


Les opérations zonales permettent de résumer les valeurs matricielles de certaines zones (groupe de cellules contiguë dans l'espace ou en valeur).


### Opération zonale à partir d'une couche vectorielle

La fonction `extract()` permet d'extraire et de manipuler les valeurs des cellules qui intersectent des données vectorielles.

Exemple à partir des limites communales :
```{r op_zonal_poly, eval=TRUE}
commune <- vect("data/lot.gpkg", layer = "communes")

# Moyenne d'élévation pour chaque polygone (commune) 
elev_by_com <-  extract(elev, commune, fun = mean, na.rm = FALSE)
head(elev_by_com, n = 3)

# Suppression des valeurs NaN
elev_by_com <- elev_by_com[!is.nan(elev_by_com$altitude),]

# Remplacement des identifiants uniques par le nom des communes
elev_by_com$ID <- commune[elev_by_com$ID]$NOM_COM
head(elev_by_com, n = 6)
```


### Opération zonale à partir d'un raster

Les opérations zonales peuvent être réalisées par zone délimitée par les valeurs catégorielles d'un second raster avec la fonction `zonal()`. **Pour cela, les deux rasters doivent avoir exactement le même étendue et la même résolution**.

```{r op_zonal_3,}
# Élévation moyenne pour chaque zone de clc
zonal(elev, clc_5, "mean", na.rm = TRUE)
```

