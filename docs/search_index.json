[["les-données-raster-le-package-terra.html", "Chapitre 5 Les données raster: le package terra 5.1 Format des objets SpatRaster 5.2 Import et export de données 5.3 Affichage dun objet SpatRaster 5.4 Modifications de la zone détude 5.5 Algèbre spatial 5.6 Transformation et conversion", " Chapitre 5 Les données raster: le package terra Ce chapitre est largement inspiré de deux présentations; Madelin (2021) et Nowosad (2021); réalisées dans le cadre de lécole thématique SIGR2021. 5.1 Format des objets SpatRaster Le package terra (Hijmans, 2021) permet de gérer des données vectorielles et raster. Pour manipuler ces données spatiales, terra les stockent dans des objets de type SpatVector et SpatRaster. Dans ce chapitre, nous nous focalisons sur la manipulation de données raster (SpatRaster) à partir de fonctions proposées par ce package. Un objet SpatRaster représente des données matricielles, en une ou plusieurs couches (variables). Cet objet stocke également un certain nombre de paramètres fondamentaux qui le décrivent (nombre de colonnes, de lignes, étendue spatiale, système de référence des coordonnées). Source : Racine (2016) 5.2 Import et export de données Le package terra permet dimporter et dexporter des fichiers raster. Il repose sur la bibliothèque GDAL qui permet de lire et de traiter un très grand nombre de format dimages géographiques. library(terra) La fonction rast() permet de créer et/ou dimporter des données raster. Les lignes suivantes importent le fichier raster elevation.tif (Tagged Image File Format) dans un objet de type SpatRaster (par défaut). Elevation_Lot &lt;- rast(&quot;data/elevation.tif&quot;) Elevation_Lot ## class : SpatRaster ## dimensions : 2904, 4202, 1 (nrow, ncol, nlyr) ## resolution : 0.0002972796, 0.0002972796 (x, y) ## extent : 0.9716575, 2.220826, 44.19333, 45.05663 (xmin, xmax, ymin, ymax) ## coord. ref. : lon/lat WGS 84 (EPSG:4326) ## source : elevation.tif ## name : file1f72aebb76 ## min value : 53 ## max value : 778 Modification du nom de la variable stockée (altitude). names(Elevation_Lot) &lt;- &quot;Altitude&quot; La fonction writeRaster() permet denregistrer un objet SpatRaster sur votre machine, dans le format de votre choix. writeRaster(x = Elevation_Lot, filename = &quot;data/new_elevation_Lot.tif&quot;) 5.3 Affichage dun objet SpatRaster La fonction plot() permet dafficher un objet SpatRaster. plot(Elevation_Lot) Un raster contient toujours des données numériques, mais il peut aussi bien sagir de données quantitatives que de données qualitatives (catégorielles) codées numériquement (ex: type doccupation du sol). Précisez le type de données stockées avec largument type (type = \"continuous\" par défaut), pour les afficher correctement. Import et affichage dun raster contenant des données catégorielles : CORINE Land Cover 2018 (type doccupation du sol) avec une résolution de 100m : # Import des données CORINE Land Cover 2018 # Type d&#39;occupation du sol, résolution de 100m CLC2018_Lot &lt;- rast(&quot;data/CLC2018_Lot.tif&quot;) Ces données ont été récupérées sur le site de Copernicus, le programme européen de surveillance de la Terre qui collecte et met à disposition des données issues de ses propres satellites (Sentinelles) dobservation. Une extraction centrée sur la commune de Cahors a ensuite été réalisée. plot(CLC2018_Lot, type=&quot;classes&quot;) Pour afficher les intitulés réels des types doccupation du sol, ainsi que les couleurs officielles de la nomenclature CORINE Land Cover (consultables ici), vous pouvez procéder de la manière suivante. intitule_poste &lt;- c( &quot;Tissu urbain continu&quot;, &quot;Tissu urbain discontinu&quot;, &quot;Zones industrielles ou commerciales et installations publiques&quot;, &quot;Réseaux routier et ferroviaire et espaces associés&quot;, &quot;Aéroports&quot;,&quot;Extraction de matériaux&quot;, &quot;Equipements sportifs et de loisirs&quot;, &quot;Terres arables hors périmètres d&#39;irrigation&quot;, &quot;Vignobles&quot;, &quot;Vergers et petits fruits&quot;, &quot;Prairies et autres surfaces toujours en herbe à usage agricole&quot;, &quot;Systèmes culturaux et parcellaires complexes&quot;, &quot;Surfaces essentiellement agricoles (interrompues par espaces nat.)&quot;, &quot;Forêts de feuillus&quot;, &quot;Forêts de conifères&quot;, &quot;Forêts mélangées&quot;, &quot;Pelouses et pâturages naturels&quot;, &quot;Landes et broussailles&quot;, &quot;Végétation sclérophylle&quot;, &quot;Forêt et végétation arbustive en mutation&quot;, &quot;Cours et voies d&#39;eau&quot;, &quot;Plans d&#39;eau&quot; ) couleur_off &lt;- c(&quot;#E6004D&quot;, &quot;#FF0000&quot;, &quot;#CC4DF2&quot;, &quot;#CC0000&quot;, &quot;#E6CCE6&quot;, &quot;#A600CC&quot;, &quot;#FFE6FF&quot;, &quot;#FFFFA8&quot;, &quot;#E68000&quot;, &quot;#F2A64D&quot;, &quot;#E6E64D&quot;, &quot;#FFE64D&quot;, &quot;#E6CC4D&quot;, &quot;#80FF00&quot;, &quot;#00A600&quot;, &quot;#4DFF00&quot;, &quot;#CCF24D&quot;, &quot;#A6FF80&quot;, &quot;#A6E64D&quot;, &quot;#A6F200&quot;, &quot;#00CCF2&quot;, &quot;#80F2E6&quot;) plot(CLC2018_Lot, type = &quot;classes&quot;, levels = intitule_poste, col = couleur_off, plg = list(cex = 0.7), mar = c(3, 1.5, 1, 18.5) ) 5.4 Modifications de la zone détude 5.4.1 (Re)projections Pour modifier le système de projection dun raster, utilisez la fonction project(). Il est alors nécessaire dindiquer la méthode destimation des nouvelles valeurs des cellules. Source : Centre Canadien de Télédétection Quatre méthodes destimation sont disponibles : near : plus proche voisin. Méthode rapide et par défaut pour les données qualitatives; bilinear : interpolation bilinéaire. Méthode par défaut pour les données quantitatives; cubic : interpolation cubique; cubicspline : interpolation cubique spline. # Projection en RGF93 / Lambert-93 Elevation_Lot_L93 &lt;- project(x= Elevation_Lot, y = &quot;EPSG:2154&quot;, method = &quot;bilinear&quot;) CLC2018_Lot_L93 &lt;- project(x= CLC2018_Lot, y = &quot;EPSG:2154&quot;, method = &quot;near&quot;) 5.4.2 Crop Le découpage dun raster en fonction de létendue dun autre objet SpatVector ou SpatRaster est réalisable avec la fonction crop(). Source : Racine (2016) Import de données vectorielles (découpages communaux) avec la fonction vect. Ces données seront stockées dans un objet SpatVector. commune &lt;- vect(&quot;data/lot46.gpkg&quot;, layer=&quot;commune&quot;) Extraction des limites communales de Cahors (code INSEE : 46042). cahors &lt;- subset(commune, commune$INSEE_COM == &quot;46042&quot;) Utilisation de la fonction crop(). Les deux couches de données doivent être dans la même projection. crop_cahors &lt;- crop(Elevation_Lot_L93, cahors) plot(crop_cahors) plot(cahors, add=TRUE) 5.4.3 Mask Pour afficher uniquement les valeurs dun raster contenu dans un polygone, utilisez la fonction mask(). Source : Racine (2016) Création dun masque sur le raster crop_cahors en fonction des limites communales (polygone) de cahors. mask_cahors &lt;- mask(crop_cahors, cahors) plot(mask_cahors) 5.4.4 Agrégation &amp; désagrégation Le ré-échantillonnage dun raster dans une résolution différente se fait en deux étapes. Source : Racine (2016) Afficher la résolution dun raster avec la fonction res(). # Taille des cellules ? res(Elevation_Lot_L93) ## [1] 26.99635 26.99635 Créer une grille de même étendue, puis en diminuer la résolution spatiale (plus grosses cellules). Elevation_LowerGrid &lt;- Elevation_Lot_L93 # Tailles des cellules = 1000 mètres res(Elevation_LowerGrid) &lt;- 1000 # res(Elevation_HigherGrid) &lt;- 10 Elevation_LowerGrid ## class : SpatRaster ## dimensions : 98, 101, 1 (nrow, ncol, nlyr) ## resolution : 1000, 1000 (x, y) ## extent : 537884, 638884, 6344114, 6442114 (xmin, xmax, ymin, ymax) ## coord. ref. : RGF93 / Lambert-93 (EPSG:2154) La fonction resample() permet de ré-échantillonner les valeurs de départ dans la nouvelle résolution spatiale. Plusieurs méthodes de ré-échantillonnage sont disponibles (cf. partie 5.4.1). Elevation_LowerGrid &lt;- resample(Elevation_Lot_L93, Elevation_LowerGrid, method = &quot;bilinear&quot;) plot(Elevation_LowerGrid, main=&quot;Taille des cellules = 1000m\\nMéthode de ré-échantillonnage bilinéaire&quot;) 5.4.5 Fusion de raster Fusionner plusieurs objets SpatRaster en un seul avec merge() ou mosaic(). Source : https://desktop.arcgis.com/fr/arcmap/10.3/manage-data/raster-and-images/what-is-a-mosaic.htm Après un découpage du raster délévation par la limite communale de Cahors (cf partie 5.4.2), nous réalisons la même chose pour la commune limitrophe de Bellefont-La Rauze. # Extraction des limites communales de Bellefont-La Rauze bellefont &lt;- subset(commune, commune$INSEE_COM == &quot;46156&quot;) # Découpage du raster d&#39;élévation en fonction des limites communales crop_bellefont &lt;- crop(Elevation_Lot_L93, bellefont) Les rasters délévation crop_cahors et crop_bellefont se chevauchent spatialement : La différence entre les fonctions merge() ou mosaic() concerne les valeurs des cellules qui se superposent. La fonction mosaic() calcule la valeur moyenne tandis que merge() conserve la valeur du premier objet SpatRaster appelé dans la fonction. # Dans cet exemple, merge() et mosaic() donnent le même résultat merge_raster &lt;- merge(crop_cahors, crop_bellefont) mosaic_raster &lt;- mosaic(crop_cahors, crop_bellefont) plot(merge_raster) 5.4.6 segregate Décomposer un raster par valeur (ou modalité) en différentes couches matricielles avec la fonction segregate(). # Création d&#39;une couche matricielle par modalité CLC2018_by_class &lt;- segregate(CLC2018_Lot_L93, keep=TRUE, other=NA) plot(CLC2018_by_class) 5.5 Algèbre spatial Lalgèbre spatial se classifie en quatre groupes dopération (Tomlin, 1990) : Local : opération par cellule, sur une ou plusieurs couches; Focal : opération de voisinage (cellules environnantes); Zonal : pour résumer les valeurs matricielles pour certaines zones, généralement irrégulières; Global : pour résumer les valeurs matricielles dune ou plusieurs matrices. Source : Li (2009) 5.5.1 Opérations locales Source : Mennis (2015) 5.5.1.1 Remplacement de valeur # Remplace les valeurs -9999 par NA Elevation_Lot_L93[Elevation_Lot_L93[[1]]== -9999] &lt;- NA # Remplace les valeurs &lt; 1500 par NA Elevation_Lot_L93[Elevation_Lot_L93 &lt; 1500] &lt;- NA # Remplace les valeurs NA par 0 Elevation_Lot_L93[is.na(Elevation_Lot_L93 )] &lt;- 0 5.5.1.2 Opération sur chaque cellule # Ajout de 1000 à la valeur de chaque cellule Elevation_Lot_1000 &lt;- Elevation_Lot_L93 + 1000 # Suppression de l&#39;altitude médiane à la valeur de chaque cellule Elevation_Lot_median &lt;- Elevation_Lot_L93 - global(Elevation_Lot_L93, median)[[1]] 5.5.1.3 Reclassification La reclassification des valeurs dun raster peut aussi bien être utilisée pour discrétiser des données quantitatives que pour catégoriser des modalités qualitatives. Cela permet par exemple de répartir les 44 postes de la nomenclature CLC selon les 5 grands types doccupation du territoire : territoires artificialisés, agricoles, forêts et milieux semi-naturels, zones humides et surfaces en eau. Pour cela, il est dabord nécessaire de construire la table (matrice) de correspondance. reclassif &lt;- matrix(c(100, 199, 1, 200, 299, 2, 300, 399, 3, 400, 499, 4, 500, 599, 5), ncol = 3, byrow = TRUE) Les valeurs comprises entre 100 et 199 seront remplacées par la valeur 1. Les valeurs comprises entre 200 et 299 seront remplacées par la valeur 2. Les valeurs comprises entre 300 et 399 seront remplacées par la valeur 3.  reclassif ## [,1] [,2] [,3] ## [1,] 100 199 1 ## [2,] 200 299 2 ## [3,] 300 399 3 ## [4,] 400 499 4 ## [5,] 500 599 5 La fonction classify() permet de réaliser la reclassification. CLC2018_5class &lt;- classify(CLC2018_Lot_L93, rcl = reclassif) plot(CLC2018_5class, type =&quot;classes&quot;) Affichage avec les intitulés et couleurs officiels des différentes catégories. plot(CLC2018_5class, type =&quot;classes&quot;, levels=c(&quot;Territoires artificialisés&quot;, &quot;Territoires agricoles&quot;, &quot;Forêts et milieux semi-naturels&quot;, &quot;Surfaces en eau&quot;), col=c(&quot;#E6004D&quot;, &quot;#FFFFA8&quot;, &quot;#80FF00&quot;, &quot;#00CCF2&quot;), mar=c(3, 1.5, 1, 11)) 5.5.1.4 Opération sur plusieurs couches (ex: NDVI) Il est possible de calculer la valeur dune cellule à partir de ses valeurs stockées dans différentes couches dun objet SpatRaster. Lexemple le plus courant est sans doute le calcul de lindice de végétation normalisé (NDVI). Pour chaque cellule, on calcule une valeur à partir de deux couches de données matricielles dune image satellite multispectrale. # Import d&#39;une image satellite multispectrale Sentinel2a &lt;- rast(&quot;data/Sentinel2A.tif&quot;) Cette image satellite multispectrale (résolution de 10m) datée du 12/10/2021, a été produite par le satellite Sentinel-2 et a été récupéré sur la plateforme Copernicus Open Access Hub. Une extraction des bandes spectrales Rouge et proche infrarouge, centrée sur le département du Lot a ensuite été réalisée. plot(Sentinel2a) Pour alléger le code, on assigne les deux couches matricielles dans des objets SpatRaster différents. # Bande spectrale rouge B04_Red &lt;- Sentinel2a[[1]] # Bande spectrale proche infrarouge B08_NIR &lt;-Sentinel2a[[2]] À partir de ces deux rasters, nous pouvons calculer lindice de végétation normalisé : \\[{NDVI}=\\frac{\\mathrm{NIR} - \\mathrm{Red}} {\\mathrm{NIR} + \\mathrm{Red}}\\] raster_NDVI &lt;- (B08_NIR - B04_Red ) / (B08_NIR + B04_Red ) plot(raster_NDVI) Plus les valeurs sont importantes (proche de 1), plus la végétation est dense. 5.5.2 Opérations focales Source : Mennis (2015) Lanalyse focale considère une cellule plus ses voisins directs de manière contiguë et symétrique (opérations de voisinage). Le plus souvent, la valeur de la cellule de sortie est le résultat dun bloc de cellules dentrée 3 x 3 (nombre impair). La première étape consiste à construire une matrice qui détermine le bloc de cellules qui sera pris en compte autour de chaque cellule. # Matrice 5 x 5, où chaque cellule présente la même pondération mon_focal &lt;- matrix(1, nrow = 5, ncol = 5) mon_focal ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1 1 1 1 1 ## [2,] 1 1 1 1 1 ## [3,] 1 1 1 1 1 ## [4,] 1 1 1 1 1 ## [5,] 1 1 1 1 1 La fonction focal() permet de ensuite de réaliser lanalyse souhaitée. Par exemple : le calcul de la moyenne des valeurs de toutes les cellules contiguës, pour chaque cellule du raster. Elevation_LowerGrid_mean &lt;- focal(Elevation_LowerGrid, w = mon_focal, fun = mean) 5.5.2.1 Opération focales pour rasters délévation La fonction terrain() permet de réaliser des analyses focales spécifiques au rasters délévation. Six opérations sont disponibles : slope = calcul de la pente ou degré dinclinaison de la surface; aspect = calcul de lorientation de la pente; roughness = calcul de la variabilité ou lirrégularité de lélévation; TPI = calcul de lindice des positions topographiques; TRI = calcul de lindice de la variabilité de lélévation; flowdir = calcul du sens découlement de leau. Exemples avec le calcul des pentes (slope). # Calcul de la pente (slope) slope &lt;- terrain(Elevation_Lot_L93, &quot;slope&quot;, neighbors = 8, # 8 (ou 4) cellules autour pris en compte unit = &quot;degrees&quot;) # Unité en sortie # Inclinaison des pentes, en degré plot(slope) 5.5.3 Opérations globales Source : https://gisgeography.com/map-algebra-global-zonal-focal-local/ Les opérations globales permettent de résumer les valeurs matricielles dune ou plusieurs matrices. # Valeur moyenne global(Elevation_Lot_L93, fun = &quot;mean&quot;) ## mean ## Altitude 284.5169 # Écart-type global(Elevation_Lot_L93, fun = &quot;sd&quot;) ## sd ## Altitude 135.6232 # Fréquence freq(CLC2018_5class) ## layer value count ## [1,] 1 1 18319 ## [2,] 1 2 469848 ## [3,] 1 3 406889 ## [4,] 1 5 5333 # Tableau de contingence table(CLC2018_5class[]) ## ## 1 2 3 5 ## 18319 469848 406889 5333 Représentations statistiques qui résument les informations matricielles. # Histogramme hist(Elevation_Lot_L93) ## Warning: [hist] a sample of7% of the cells was used # Densité density(Elevation_Lot_L93) 5.5.4 Opérations zonales Source : Mennis (2015) Les opérations zonales permettent de résumer les valeurs matricielles de certaines zones (groupe de cellules contiguë dans lespace ou en valeur). 5.5.4.1 Opération zonale sur une extraction Toutes les opérations globales peuvent être réalisées sur une extraction de cellules résultant des fonctions crop(), mask(), segregate() Exemple : élévation moyenne pour la ville de Cahors (cf partie 5.4.3). # Valeur moyenne du raster &quot;mask&quot; sur Cahors global(mask_cahors, fun = &quot;mean&quot;, na.rm=TRUE) ## mean ## Altitude 205.1767 5.5.4.2 Opération zonale à partir dune couche vectorielle La fonction extract() permet dextraire et de manipuler les valeurs des cellules qui intersectent des données vectorielles. Exemple à partir de polygones : # Moyenne d&#39;élévation pour chaque polygone (commune) ? elevation_by_com &lt;- extract(Elevation_LowerGrid, commune, fun=mean) head(elevation_by_com, 10) ## ID Altitude ## 1 1 203.0747 ## 2 2 383.3535 ## 3 3 325.7307 ## 4 4 417.7236 ## 5 5 124.6304 ## 6 6 202.1067 ## 7 7 214.6572 ## 8 8 237.2690 ## 9 9 345.3603 ## 10 10 216.9668 5.5.4.3 Opération zonale à partir dun raster Les opérations zonales peuvent être réaliser par zone délimitée par les valeurs catégorielles dun second raster. Pour cela, les deux rasters doivent avoir exactement le même étendue et la même résolution. # Création d&#39;un second raster # Même résolution et étendue que &quot;Elevation_LowerGrid&quot; second_raster_CLC &lt;- rast(Elevation_LowerGrid) # Ré-échantillonnage du type d&#39;occupation du sol second_raster_CLC &lt;- resample(CLC2018_5class, second_raster_CLC, method = &quot;near&quot;) # Ajout d&#39;un nom de variable pour le second raster names(second_raster_CLC) &lt;- &quot;CLC2018_5class&quot; Calcul de lélévation moyenne pour les différentes zones du second raster. # Élévation moyenne pour chaque zone du &quot;second_raster&quot; zonal(Elevation_LowerGrid, second_raster_CLC , &quot;mean&quot;, na.rm=TRUE) ## CLC2018_5class Altitude ## 1 1 234.4005 ## 2 2 298.2720 ## 3 3 287.8398 ## 4 5 156.1017 5.6 Transformation et conversion 5.6.1 Rasterisation Transformer des polygones en format raster. raster_commune &lt;- rasterize(x = commune, y = Elevation_Lot_L93 , field = 46) plot(raster_commune) Transformer des points en format raster. # Rasterisation des centroïdes des communes raster_com_centroide &lt;- rasterize(x = centroids(commune), y = Elevation_LowerGrid, fun=sum) plot(raster_com_centroide) Transformer des lignes format raster. # Rasterisation des limites communales raster_com_line &lt;- rasterize(x = as.lines(commune), y = Elevation_LowerGrid, fun=sum) plot(raster_com_line) 5.6.2 Vectorisation Transformer un raster en polygones vectoriels. Polygone_Elevation &lt;- as.polygons(Elevation_LowerGrid) plot(Polygone_Elevation, y = 1, border=&quot;white&quot;) Transformer un raster en points vectoriels. Points_Elevation &lt;- as.points(Elevation_LowerGrid) plot(Points_Elevation, y = 1, cex = 0.3) Transformer un raster en lignes vectorielles. Lines_Elevation &lt;- as.lines(Elevation_LowerGrid) plot(Lines_Elevation) 5.6.3 terra, raster, sf, stars Les packages de références permettant de manipuler les données spatiales reposent tous sur leur propre classe dobjet. Il est parfois nécessaire de convertir ces objets dune classe à lautre pour profiter de lensemble des fonctionnalités offertes par ces différents packages. Les fonctions de conversion pour les données matricielles : FROM/TO raster terra stars raster rast() st_as_stars() terra raster() st_as_stars() stars raster() as(x, Raster) + rast() Les fonctions de conversion pour les données vectorielles : FROM/TO sf sp terra sf as(x, Spatial) vect() sp st_as_sf() vect() terra st_as_sf() as(x, Spatial) References Hijmans, R. J. (2021). terra: Spatial Data Analysis. https://CRAN.R-project.org/package=terra Li, X. (2009). Map algebra and beyond : 1. Map algebra for scalar fields. https://slideplayer.com/slide/5822638/. Madelin, M. (2021). Analyse dimages raster (et télédétection). https://mmadelin.github.io/sigr2021/SIGR2021_raster_MM.html. Mennis, J. (2015). Fundamentals of GIS : raster operations. https://cupdf.com/document/gus-0262-fundamentals-of-gis-lecture-presentation-7-raster-operations-jeremy.html. Nowosad, J. (2021). Image processing and all things raster. https://nowosad.github.io/SIGR2021/workshop2/workshop2.html. Racine, E. B. (2016). The Visual Raster Cheat Sheet. https://rpubs.com/etiennebr/visualraster. Tomlin, C. D. (1990). Geographic information systems and cartographic modeling. Prentice Hall. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
